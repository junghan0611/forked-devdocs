{"entries":[{"name":"ASP.NET Core","path":"asp-net-core","type":"ASP.NET Core"},{"name":"ASP.NET Core: 타입스크립트 추가 (Add TypeScript)","path":"asp-net-core#타입스크립트-추가-add-typescript","type":"ASP.NET Core"},{"name":"Compiler Options in MSBuild","path":"compiler-options-in-msbuild","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: TypeScriptCompileBlocked","path":"compiler-options-in-msbuild#typescriptcompileblocked","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: TypeScriptEnableIncrementalMSBuild (TypeScript 4.2 Beta and later)","path":"compiler-options-in-msbuild#typescriptenableincrementalmsbuild-typescript-42-beta-and-later","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: 개요 (Overview)","path":"compiler-options-in-msbuild#개요-overview","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: 나의 Visual Studio 버전에서 지원하는 것은? (What is supported in my version of Visual Studio?)","path":"compiler-options-in-msbuild#나의-visual-studio-버전에서-지원하는-것은-what-is-supported-in-my-version-of-visual-studio","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: 맵핑 (Mappings)","path":"compiler-options-in-msbuild#맵핑-mappings","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: 예제 (Example)","path":"compiler-options-in-msbuild#예제-example","type":"Compiler Options in MSBuild"},{"name":"Compiler Options in MSBuild: 툴버전 (ToolsVersion)","path":"compiler-options-in-msbuild#툴버전-toolsversion","type":"Compiler Options in MSBuild"},{"name":"Conditional Types","path":"2/conditional-types","type":"Conditional Types"},{"name":"Conditional Types: 분산적인 조건부 타입","path":"2/conditional-types#분산적인-조건부-타입","type":"Conditional Types"},{"name":"Configuring Watch","path":"configuring-watch","type":"Configuring Watch"},{"name":"Configuring Watch: Configuring file watching using a tsconfig.json","path":"configuring-watch#configuring-file-watching-using-a-tsconfigjson","type":"Configuring Watch"},{"name":"Configuring Watch: 배경 (Background)","path":"configuring-watch#배경-background","type":"Configuring Watch"},{"name":"Configuring Watch: 환경 변수 TSC*WATCHFILE을 사용하여 파일 감시 설정 (Configuring file watching using environment variable TSC*WATCHFILE)","path":"configuring-watch#환경-변수-tscwatchfile을-사용하여-파일-감시-설정-configuring-file-watching-using-environment-variable-tscwatchfile","type":"Configuring Watch"},{"name":"Configuring Watch: 환경 변수TSC*WATCHDIRECTORY를 사용하여 디렉터리 감시 설정 (Configuring directory watching using environment variable TSC*WATCHDIRECTORY)","path":"configuring-watch#환경-변수tscwatchdirectory를-사용하여-디렉터리-감시-설정-configuring-directory-watching-using-environment-variable-tscwatchdirectory","type":"Configuring Watch"},{"name":"Consumption","path":"declaration-files/consumption","type":"Consumption"},{"name":"Consumption: 다운로드 (Downloading)","path":"declaration-files/consumption#다운로드-downloading","type":"Consumption"},{"name":"Consumption: 사용하기 (Consuming)","path":"declaration-files/consumption#사용하기-consuming","type":"Consumption"},{"name":"Consumption: 찾기 (Searching)","path":"declaration-files/consumption#찾기-searching","type":"Consumption"},{"name":"Creating .d.ts Files from .js files","path":"declaration-files/dts-from-js","type":"Creating .d.ts Files from .js files"},{"name":"Creating .d.ts Files from .js files: .d.ts 파일 생성을 위한 프로젝트 설정 (Setting up your Project to emit .d.ts files)","path":"declaration-files/dts-from-js#dts-파일-생성을-위한-프로젝트-설정-setting-up-your-project-to-emit-dts-files","type":"Creating .d.ts Files from .js files"},{"name":"Creating .d.ts Files from .js files: package.json 수정 (Editing the package.json)","path":"declaration-files/dts-from-js#packagejson-수정-editing-the-packagejson","type":"Creating .d.ts Files from .js files"},{"name":"Creating .d.ts Files from .js files: 컴파일러 실행 (Run the compiler)","path":"declaration-files/dts-from-js#컴파일러-실행-run-the-compiler","type":"Creating .d.ts Files from .js files"},{"name":"Creating .d.ts Files from .js files: 팁 (Tips)","path":"declaration-files/dts-from-js#팁-tips","type":"Creating .d.ts Files from .js files"},{"name":"Declaration Merging","path":"declaration-merging","type":"Declaration Merging"},{"name":"Declaration Merging: 기본 사용법 (Basic Concepts)","path":"declaration-merging#기본-사용법-basic-concepts","type":"Declaration Merging"},{"name":"Declaration Merging: 네임 스페이스와 클래스 병합 (Merging Namespaces with Classes)","path":"declaration-merging#네임-스페이스와-클래스-병합-merging-namespaces-with-classes","type":"Declaration Merging"},{"name":"Declaration Merging: 네임스페이스 병합 (Merging Namespaces)","path":"declaration-merging#네임스페이스-병합-merging-namespaces","type":"Declaration Merging"},{"name":"Declaration Merging: 모듈 보강 (Module Augmentation)","path":"declaration-merging#모듈-보강-module-augmentation","type":"Declaration Merging"},{"name":"Declaration Merging: 소개 (Introduction)","path":"declaration-merging#소개-introduction","type":"Declaration Merging"},{"name":"Declaration Merging: 인터페이스 병합 (Merging Interfaces)","path":"declaration-merging#인터페이스-병합-merging-interfaces","type":"Declaration Merging"},{"name":"Declaration Merging: 전역 보강 (Global augmentation)","path":"declaration-merging#전역-보강-global-augmentation","type":"Declaration Merging"},{"name":"Declaration Merging: 클래스, 함수, 열거형과 네임 스페이스 병합 (Merging Namespaces with Classes, Functions, and Enums)","path":"declaration-merging#클래스-함수-열거형과-네임-스페이스-병합-merging-namespaces-with-classes-functions-and-enums","type":"Declaration Merging"},{"name":"Declaration Merging: 허용되지 않은 병합 (Disallowed Merges)","path":"declaration-merging#허용되지-않은-병합-disallowed-merges","type":"Declaration Merging"},{"name":"Declaration Reference","path":"declaration-files/by-example","type":"Declaration Reference"},{"name":"Declaration Reference: 오버로드된 함수 (Overloaded Functions)","path":"declaration-files/by-example#오버로드된-함수-overloaded-functions","type":"Declaration Reference"},{"name":"Declaration Reference: 재사용 가능한 타입 (인터페이스) (Reusable Types (Interfaces))","path":"declaration-files/by-example#재사용-가능한-타입-인터페이스-reusable-types-interfaces","type":"Declaration Reference"},{"name":"Declaration Reference: 재사용 가능한 타입 (타입 별칭) (Reusable Types (Type Aliases))","path":"declaration-files/by-example#재사용-가능한-타입-타입-별칭-reusable-types-type-aliases","type":"Declaration Reference"},{"name":"Declaration Reference: 전역 변수 (Global Variables)","path":"declaration-files/by-example#전역-변수-global-variables","type":"Declaration Reference"},{"name":"Declaration Reference: 전역 함수 (Global Functions)","path":"declaration-files/by-example#전역-함수-global-functions","type":"Declaration Reference"},{"name":"Declaration Reference: 클래스 (Classes)","path":"declaration-files/by-example#클래스-classes","type":"Declaration Reference"},{"name":"Declaration Reference: 타입 구조화하기 (Organizing Types)","path":"declaration-files/by-example#타입-구조화하기-organizing-types","type":"Declaration Reference"},{"name":"Declaration Reference: 프로퍼티를 갖는 객체 (Objects with Properties)","path":"declaration-files/by-example#프로퍼티를-갖는-객체-objects-with-properties","type":"Declaration Reference"},{"name":"Decorators","path":"decorators","type":"Decorators"},{"name":"Decorators: 데코레이터 팩토리 (Decorator Factories)","path":"decorators#데코레이터-팩토리-decorator-factories","type":"Decorators"},{"name":"Decorators: 데코레이터 평가 (Decorator Evaluation)","path":"decorators#데코레이터-평가-decorator-evaluation","type":"Decorators"},{"name":"Decorators: 데코레이터 합성 (Decorator Composition)","path":"decorators#데코레이터-합성-decorator-composition","type":"Decorators"},{"name":"Decorators: 매개변수 데코레이터 (Parameter Decorators)","path":"decorators#매개변수-데코레이터-parameter-decorators","type":"Decorators"},{"name":"Decorators: 메서드 데코레이터 (Method Decorators)","path":"decorators#메서드-데코레이터-method-decorators","type":"Decorators"},{"name":"Decorators: 메타데이터 (Metadata)","path":"decorators#메타데이터-metadata","type":"Decorators"},{"name":"Decorators: 소개 (Introduction)","path":"decorators#소개-introduction","type":"Decorators"},{"name":"Decorators: 접근자 데코레이터 (Accessor Decorators)","path":"decorators#접근자-데코레이터-accessor-decorators","type":"Decorators"},{"name":"Decorators: 클래스 데코레이터 (Class Decorators)","path":"decorators#클래스-데코레이터-class-decorators","type":"Decorators"},{"name":"Decorators: 프로퍼티 데코레이터 (Property Decorators)","path":"decorators#프로퍼티-데코레이터-property-decorators","type":"Decorators"},{"name":"Deep Dive","path":"declaration-files/deep-dive","type":"Deep Dive"},{"name":"Deep Dive: export = or import 사용하기 (Using with export = or import)","path":"declaration-files/deep-dive#export--or-import-사용하기-using-with-export--or-import","type":"Deep Dive"},{"name":"Deep Dive: 간단한 조합: 하나의 이름, 여러 의미 (Simple Combinations: One name, multiple meanings)","path":"declaration-files/deep-dive#간단한-조합-하나의-이름-여러-의미-simple-combinations-one-name-multiple-meanings","type":"Deep Dive"},{"name":"Deep Dive: 고급 결합 (Advanced Combinations)","path":"declaration-files/deep-dive#고급-결합-advanced-combinations","type":"Deep Dive"},{"name":"Deep Dive: 정의 파일 이론: 심층 분석 (Definition File Theory: A Deep Dive)","path":"declaration-files/deep-dive#정의-파일-이론-심층-분석-definition-file-theory-a-deep-dive","type":"Deep Dive"},{"name":"Deep Dive: 주요 컨셉 (Key Concepts)","path":"declaration-files/deep-dive#주요-컨셉-key-concepts","type":"Deep Dive"},{"name":"Do's and Don'ts","path":"declaration-files/do-s-and-don-ts","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: Number, String, Boolean, Symbol and Object","path":"declaration-files/do-s-and-don-ts#number-string-boolean-symbol-and-object","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 선택적 매개변수 사용 (Use Optional Parameters)","path":"declaration-files/do-s-and-don-ts#선택적-매개변수-사용-use-optional-parameters","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 순서 (Ordering)","path":"declaration-files/do-s-and-don-ts#순서-ordering","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 오버로드와 콜백 (Overloads and Callbacks)","path":"declaration-files/do-s-and-don-ts#오버로드와-콜백-overloads-and-callbacks","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 유니언 타입 사용 (Use Union Types)","path":"declaration-files/do-s-and-don-ts#유니언-타입-사용-use-union-types","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 제네릭 (Generics)","path":"declaration-files/do-s-and-don-ts#제네릭-generics","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 콜백에서 선택적 매개변수 (Optional Parameters in Callbacks)","path":"declaration-files/do-s-and-don-ts#콜백에서-선택적-매개변수-optional-parameters-in-callbacks","type":"Do's and Don'ts"},{"name":"Do's and Don'ts: 콜백의 반환 타입 (Return Types of Callbacks)","path":"declaration-files/do-s-and-don-ts#콜백의-반환-타입-return-types-of-callbacks","type":"Do's and Don'ts"},{"name":"DOM Manipulation","path":"dom-manipulation","type":"DOM Manipulation"},{"name":"DOM Manipulation: children과 childNodes의 차이점 (Difference between children and childNodes)","path":"dom-manipulation#children과-childnodes의-차이점-difference-between-children-and-childnodes","type":"DOM Manipulation"},{"name":"DOM Manipulation: Document 인터페이스 (The Document Interface)","path":"dom-manipulation#document-인터페이스-the-document-interface","type":"DOM Manipulation"},{"name":"DOM Manipulation: Node 인터페이스 (The Node interface)","path":"dom-manipulation#node-인터페이스-the-node-interface","type":"DOM Manipulation"},{"name":"DOM Manipulation: querySelector와 querySelectorAll 메서드 (The querySelector and querySelectorAll methods)","path":"dom-manipulation#queryselector와-queryselectorall-메서드-the-queryselector-and-queryselectorall-methods","type":"DOM Manipulation"},{"name":"DOM Manipulation: 기본 예제 (Basic Example)","path":"dom-manipulation#기본-예제-basic-example","type":"DOM Manipulation"},{"name":"DOM Manipulation: 더 자세히 알고 싶으십니까? (Interested in learning more?)","path":"dom-manipulation#더-자세히-알고-싶으십니까-interested-in-learning-more","type":"DOM Manipulation"},{"name":"Enums","path":"enums","type":"Enums"},{"name":"Enums: Ambient 열거형 (Ambient enums)","path":"enums#ambient-열거형-ambient-enums","type":"Enums"},{"name":"Enums: Objects vs Enums","path":"enums#objects-vs-enums","type":"Enums"},{"name":"Enums: 계산된 멤버와 상수 멤버 (Computed and constant members)","path":"enums#계산된-멤버와-상수-멤버-computed-and-constant-members","type":"Enums"},{"name":"Enums: 런타임에서의 열거형 (Enums at runtime)","path":"enums#런타임에서의-열거형-enums-at-runtime","type":"Enums"},{"name":"Enums: 문자열 열거형 (String enums)","path":"enums#문자열-열거형-string-enums","type":"Enums"},{"name":"Enums: 숫자 열거형 (Numeric enums)","path":"enums#숫자-열거형-numeric-enums","type":"Enums"},{"name":"Enums: 유니언 열거형과 열거형 멤버 타입 (Union enums and enum member types)","path":"enums#유니언-열거형과-열거형-멤버-타입-union-enums-and-enum-member-types","type":"Enums"},{"name":"Enums: 이종 열거형 (Heterogeneous enums)","path":"enums#이종-열거형-heterogeneous-enums","type":"Enums"},{"name":"Enums: 컴파일 시점에서 열거형 (Enums at compile time)","path":"enums#컴파일-시점에서-열거형-enums-at-compile-time","type":"Enums"},{"name":"Everyday Types","path":"2/everyday-types","type":"Everyday Types"},{"name":"Everyday Types: any","path":"2/everyday-types#any","type":"Everyday Types"},{"name":"Everyday Types: null과 undefined","path":"2/everyday-types#null과-undefined","type":"Everyday Types"},{"name":"Everyday Types: 객체 타입","path":"2/everyday-types#객체-타입","type":"Everyday Types"},{"name":"Everyday Types: 리터럴 타입","path":"2/everyday-types#리터럴-타입","type":"Everyday Types"},{"name":"Everyday Types: 배열","path":"2/everyday-types#배열","type":"Everyday Types"},{"name":"Everyday Types: 변수에 대한 타입 표기","path":"2/everyday-types#변수에-대한-타입-표기","type":"Everyday Types"},{"name":"Everyday Types: 열거형","path":"2/everyday-types#열거형","type":"Everyday Types"},{"name":"Everyday Types: 원시 타입 : string, number, 그리고 boolean","path":"2/everyday-types#원시-타입--string-number-그리고-boolean","type":"Everyday Types"},{"name":"Everyday Types: 유니언 타입","path":"2/everyday-types#유니언-타입","type":"Everyday Types"},{"name":"Everyday Types: 인터페이스","path":"2/everyday-types#인터페이스","type":"Everyday Types"},{"name":"Everyday Types: 자주 사용되지 않는 원시형 타입","path":"2/everyday-types#자주-사용되지-않는-원시형-타입","type":"Everyday Types"},{"name":"Everyday Types: 타입 단언","path":"2/everyday-types#타입-단언","type":"Everyday Types"},{"name":"Everyday Types: 타입 별칭","path":"2/everyday-types#타입-별칭","type":"Everyday Types"},{"name":"Everyday Types: 함수","path":"2/everyday-types#함수","type":"Everyday Types"},{"name":"Generics","path":"2/generics","type":"Generics"},{"name":"Generics: 제네릭 제약조건에서 타입 매개변수 사용 (Using Type Parameters in Generic Constraints)","path":"2/generics#제네릭-제약조건에서-타입-매개변수-사용-using-type-parameters-in-generic-constraints","type":"Generics"},{"name":"Generics: 제네릭에서 클래스 타입 사용 (Using Class Types in Generics)","path":"2/generics#제네릭에서-클래스-타입-사용-using-class-types-in-generics","type":"Generics"},{"name":"Gulp","path":"gulp","type":"Gulp"},{"name":"Gulp: Babel","path":"gulp#babel","type":"Gulp"},{"name":"Gulp: gulpfile.js 생성 (Create a gulpfile.js)","path":"gulp#gulpfilejs-생성-create-a-gulpfilejs","type":"Gulp"},{"name":"Gulp: Uglify","path":"gulp#uglify","type":"Gulp"},{"name":"Gulp: Watchify","path":"gulp#watchify","type":"Gulp"},{"name":"Gulp: 간단한 예제 작성 (Write a simple example)","path":"gulp#간단한-예제-작성-write-a-simple-example","type":"Gulp"},{"name":"Gulp: 결과 앱 테스트 (Test the resulting app)","path":"gulp#결과-앱-테스트-test-the-resulting-app","type":"Gulp"},{"name":"Gulp: 의존성 설치 (Install our dependencies)","path":"gulp#의존성-설치-install-our-dependencies","type":"Gulp"},{"name":"Gulp: 페이지 만들기 (Create a page)","path":"gulp#페이지-만들기-create-a-page","type":"Gulp"},{"name":"Gulp: 프로젝트 초기화 (Initialize the project)","path":"gulp#프로젝트-초기화-initialize-the-project","type":"Gulp"},{"name":"Indexed Access Types","path":"2/indexed-access-types","type":"Indexed Access Types"},{"name":"Integrating with Build Tools","path":"integrating-with-build-tools","type":"Integrating with Build Tools"},{"name":"Introduction","path":"declaration-files/introduction","type":"Introduction"},{"name":"Introduction: npm에 배포하기 (Publish to npm)","path":"declaration-files/introduction#npm에-배포하기-publish-to-npm","type":"Introduction"},{"name":"Introduction: 깊게 들어가기 (Deep Dive)","path":"declaration-files/introduction#깊게-들어가기-deep-dive","type":"Introduction"},{"name":"Introduction: 라이브러리 구조 (Library Structures)","path":"declaration-files/introduction#라이브러리-구조-library-structures","type":"Introduction"},{"name":"Introduction: 선언 파일을 찾고 설치하기 (Find and Install Declaration Files)","path":"declaration-files/introduction#선언-파일을-찾고-설치하기-find-and-install-declaration-files","type":"Introduction"},{"name":"Introduction: 예제를 통해 (By Example)","path":"declaration-files/introduction#예제를-통해-by-example","type":"Introduction"},{"name":"Introduction: 템플릿 (Templates)","path":"declaration-files/introduction#템플릿-templates","type":"Introduction"},{"name":"Introduction: 해야 할 것과 하지 말아야 할 것 (“Do”s and “Don’t”s)","path":"declaration-files/introduction#해야-할-것과-하지-말아야-할-것-dos-and-donts","type":"Introduction"},{"name":"Iterators and Generators","path":"iterators-and-generators","type":"Iterators and Generators"},{"name":"Iterators and Generators: for..of 문","path":"iterators-and-generators#forof-문","type":"Iterators and Generators"},{"name":"Iterators and Generators: 이터러블","path":"iterators-and-generators#이터러블","type":"Iterators and Generators"},{"name":"JS Projects Utilizing TypeScript","path":"intro-to-js-ts","type":"JS Projects Utilizing TypeScript"},{"name":"JS Projects Utilizing TypeScript: @ts-check","path":"intro-to-js-ts#ts-check","type":"JS Projects Utilizing TypeScript"},{"name":"JS Projects Utilizing TypeScript: JavaScript를 활용한 TypeScript (TypeScript with JavaScript)","path":"intro-to-js-ts#javascript를-활용한-typescript-typescript-with-javascript","type":"JS Projects Utilizing TypeScript"},{"name":"JS Projects Utilizing TypeScript: JSDoc을 통하여 JS에 타입 힌트 제공하기 (Providing Type Hints in JS via JSDoc)","path":"intro-to-js-ts#jsdoc을-통하여-js에-타입-힌트-제공하기-providing-type-hints-in-js-via-jsdoc","type":"JS Projects Utilizing TypeScript"},{"name":"JSDoc Reference","path":"jsdoc-supported-types","type":"JSDoc Reference"},{"name":"JSDoc Reference: @constructor","path":"jsdoc-supported-types#constructor","type":"JSDoc Reference"},{"name":"JSDoc Reference: @enum","path":"jsdoc-supported-types#enum","type":"JSDoc Reference"},{"name":"JSDoc Reference: @extends","path":"jsdoc-supported-types#extends","type":"JSDoc Reference"},{"name":"JSDoc Reference: @param 과 @returns","path":"jsdoc-supported-types#param-과-returns","type":"JSDoc Reference"},{"name":"JSDoc Reference: @template","path":"jsdoc-supported-types#template","type":"JSDoc Reference"},{"name":"JSDoc Reference: @this","path":"jsdoc-supported-types#this","type":"JSDoc Reference"},{"name":"JSDoc Reference: @type","path":"jsdoc-supported-types#type","type":"JSDoc Reference"},{"name":"JSDoc Reference: @typedef, @callback, and @param","path":"jsdoc-supported-types#typedef-callback-and-param","type":"JSDoc Reference"},{"name":"JSDoc Reference: JS Class extensions","path":"jsdoc-supported-types#js-class-extensions","type":"JSDoc Reference"},{"name":"JSDoc Reference: 지원하지 않는다고 알려진 패턴 (Patterns that are known NOT to be supported)","path":"jsdoc-supported-types#지원하지-않는다고-알려진-패턴-patterns-that-are-known-not-to-be-supported","type":"JSDoc Reference"},{"name":"JSDoc Reference: 추가 예제 (More examples)","path":"jsdoc-supported-types#추가-예제-more-examples","type":"JSDoc Reference"},{"name":"JSDoc Reference: 클래스 (Classes)","path":"jsdoc-supported-types#클래스-classes","type":"JSDoc Reference"},{"name":"JSX","path":"jsx","type":"JSX"},{"name":"JSX: as 연산자","path":"jsx#as-연산자","type":"JSX"},{"name":"JSX: JSX 결과 타입","path":"jsx#jsx-결과-타입","type":"JSX"},{"name":"JSX: React 통합","path":"jsx#react-통합","type":"JSX"},{"name":"JSX: 값-기반 요소","path":"jsx#값-기반-요소","type":"JSX"},{"name":"JSX: 기본 사용 방법","path":"jsx#기본-사용-방법","type":"JSX"},{"name":"JSX: 내장 요소","path":"jsx#내장-요소","type":"JSX"},{"name":"JSX: 속성 타입 검사","path":"jsx#속성-타입-검사","type":"JSX"},{"name":"JSX: 자식 타입 검사","path":"jsx#자식-타입-검사","type":"JSX"},{"name":"JSX: 타입 검사","path":"jsx#타입-검사","type":"JSX"},{"name":"JSX: 표현 식 포함하기","path":"jsx#표현-식-포함하기","type":"JSX"},{"name":"Keyof Type Operator","path":"2/keyof-types","type":"Keyof Type Operator"},{"name":"Keyof Type Operator: keyof 타입 연산자","path":"2/keyof-types#keyof-타입-연산자","type":"Keyof Type Operator"},{"name":"Library Structures","path":"declaration-files/library-structures","type":"Library Structures"},{"name":"Library Structures:  ES6가 모듈 플러그인에 미치는 영향 (The Impact of ES6 on Module Plugins)","path":"declaration-files/library-structures#span-idthe-impact-of-es6-on-module-plugins--es6가-모듈-플러그인에-미치는-영향-the-impact-of-es6-on-module-plugins","type":"Library Structures"},{"name":"Library Structures:  이름 충돌 방지하기 (Preventing Name Conflicts)","path":"declaration-files/library-structures#span-idpreventing-name-conflicts--이름-충돌-방지하기-preventing-name-conflicts","type":"Library Structures"},{"name":"Library Structures: UMD","path":"declaration-files/library-structures#umd","type":"Library Structures"},{"name":"Library Structures: UMD 라이브러리 의존성 (Dependencies on UMD libraries)","path":"declaration-files/library-structures#umd-라이브러리-의존성-dependencies-on-umd-libraries","type":"Library Structures"},{"name":"Library Structures: 모듈 의존성 (Dependencies on Modules)","path":"declaration-files/library-structures#모듈-의존성-dependencies-on-modules","type":"Library Structures"},{"name":"Library Structures: 모듈 호출 시그니처에 ES6가 미치는 영향 (The Impact of ES6 on Module Call Signatures)","path":"declaration-files/library-structures#모듈-호출-시그니처에-es6가-미치는-영향-the-impact-of-es6-on-module-call-signatures","type":"Library Structures"},{"name":"Library Structures: 모듈형 라이브러리 (Modular Libraries)","path":"declaration-files/library-structures#모듈형-라이브러리-modular-libraries","type":"Library Structures"},{"name":"Library Structures: 어떤 사항을 고려해야 하는가? (What should you look for?)","path":"declaration-files/library-structures#어떤-사항을-고려해야-하는가-what-should-you-look-for","type":"Library Structures"},{"name":"Library Structures: 여러 종류의 라이브러리에 대한 간단한 샘플","path":"declaration-files/library-structures#여러-종류의-라이브러리에-대한-간단한-샘플","type":"Library Structures"},{"name":"Library Structures: 전역 라이브러리 (Global Libraries)","path":"declaration-files/library-structures#전역-라이브러리-global-libraries","type":"Library Structures"},{"name":"Library Structures: 전역 라이브러리 의존성 (Dependencies on Global Libraries)","path":"declaration-files/library-structures#전역-라이브러리-의존성-dependencies-on-global-libraries","type":"Library Structures"},{"name":"Mapped Types","path":"2/mapped-types","type":"Mapped Types"},{"name":"Mapped Types: Key Remapping via as","path":"2/mapped-types#key-remapping-via-as","type":"Mapped Types"},{"name":"Migrating from JavaScript","path":"migrating-from-javascript","type":"Migrating from JavaScript"},{"name":"Migrating from JavaScript: Gulp","path":"migrating-from-javascript#gulp","type":"Migrating from JavaScript"},{"name":"Migrating from JavaScript: Webpack","path":"migrating-from-javascript#webpack","type":"Migrating from JavaScript"},{"name":"Migrating from JavaScript: 더 엄격한 체크하기 (Getting Stricter Checks)","path":"migrating-from-javascript#더-엄격한-체크하기-getting-stricter-checks","type":"Migrating from JavaScript"},{"name":"Migrating from JavaScript: 오류 제거하기 (Weeding out Errors)","path":"migrating-from-javascript#오류-제거하기-weeding-out-errors","type":"Migrating from JavaScript"},{"name":"Migrating from JavaScript: 초기 혜택 (Early Benefits)","path":"migrating-from-javascript#초기-혜택-early-benefits","type":"Migrating from JavaScript"},{"name":"Module Resolution","path":"module-resolution","type":"Module Resolution"},{"name":"Module Resolution: --noResolve 사용하기 (Using --noResolve)","path":"module-resolution#--noresolve-사용하기-using---noresolve","type":"Module Resolution"},{"name":"Module Resolution: 공통 질문 (Common Questions)","path":"module-resolution#공통-질문-common-questions","type":"Module Resolution"},{"name":"Module Resolution: 모듈 해석 전략 (Module Resolution Strategies)","path":"module-resolution#모듈-해석-전략-module-resolution-strategies","type":"Module Resolution"},{"name":"Module Resolution: 모듈 해석 추적 (Tracing module resolution)","path":"module-resolution#모듈-해석-추적-tracing-module-resolution","type":"Module Resolution"},{"name":"Module Resolution: 상대적 vs. 비-상대적 모듈 import (Relative vs. Non-relative module imports)","path":"module-resolution#상대적-vs-비-상대적-모듈-import-relative-vs-non-relative-module-imports","type":"Module Resolution"},{"name":"Module Resolution: 추가 모듈 해석 플래그 (Additional module resolution flags)","path":"module-resolution#추가-모듈-해석-플래그-additional-module-resolution-flags","type":"Module Resolution"},{"name":"Module: Class","path":"declaration-files/templates/module-class-d-ts","type":"Module: Class"},{"name":"Module: Function","path":"declaration-files/templates/module-function-d-ts","type":"Module: Function"},{"name":"Modules","path":"modules","type":"Modules"},{"name":"Modules: Ambient 모듈 (Ambient Modules)","path":"modules#ambient-모듈-ambient-modules","type":"Modules"},{"name":"Modules: Export 문 (Export statements)","path":"modules#export-문-export-statements","type":"Modules"},{"name":"Modules: Re-export 하기 (Re-exports)","path":"modules#re-export-하기-re-exports","type":"Modules"},{"name":"Modules: x로 모두 export 하기 (Export all as x)","path":"modules#x로-모두-export-하기-export-all-as-x","type":"Modules"},{"name":"Modules: 가능한 최상위-레벨에 가깝게 export 하기 (Export as close to top-level as possible)","path":"modules#가능한-최상위-레벨에-가깝게-export-하기-export-as-close-to-top-level-as-possible","type":"Modules"},{"name":"Modules: 모듈에서 네임스페이스를 사용하지 마세요 (Do not use namespaces in modules)","path":"modules#모듈에서-네임스페이스를-사용하지-마세요-do-not-use-namespaces-in-modules","type":"Modules"},{"name":"Modules: 모듈에서 단일 export를 import 하기 (Import a single export from a module)","path":"modules#모듈에서-단일-export를-import-하기-import-a-single-export-from-a-module","type":"Modules"},{"name":"Modules: 부수효과만을 위해 모듈 import 하기 (Import a module for side-effects only)","path":"modules#부수효과만을-위해-모듈-import-하기-import-a-module-for-side-effects-only","type":"Modules"},{"name":"Modules: 상속을 위한 re-export 하기 (Re-export to extend)","path":"modules#상속을-위한-re-export-하기-re-export-to-extend","type":"Modules"},{"name":"Modules: 선언 export 하기 (Exporting a declaration)","path":"modules#선언-export-하기-exporting-a-declaration","type":"Modules"},{"name":"Modules: 위험 신호 (Red Flags)","path":"modules#위험-신호-red-flags","type":"Modules"},{"name":"Modules: 전체 모듈을 단일 변수로 import 해서, 모듈 exports 접근에 사용하기 (Import the entire module into a single variable, and use it to access the module exports)","path":"modules#전체-모듈을-단일-변수로-import-해서-모듈-exports-접근에-사용하기-import-the-entire-module-into-a-single-variable-and-use-it-to-access-the-module-exports","type":"Modules"},{"name":"Modules: 타입 import 하기 (Importing Types)","path":"modules#타입-import-하기-importing-types","type":"Modules"},{"name":"More on Functions","path":"2/functions","type":"More on Functions"},{"name":"More on Functions: 구성 시그니처","path":"2/functions#구성-시그니처","type":"More on Functions"},{"name":"More on Functions: 나머지 매개변수와 인수","path":"2/functions#나머지-매개변수와-인수","type":"More on Functions"},{"name":"More on Functions: 매개변수 구조 분해(Parameter Destructing)","path":"2/functions#매개변수-구조-분해parameter-destructing","type":"More on Functions"},{"name":"More on Functions: 선택적 매개변수","path":"2/functions#선택적-매개변수","type":"More on Functions"},{"name":"More on Functions: 알아야 할 다른 타입","path":"2/functions#알아야-할-다른-타입","type":"More on Functions"},{"name":"More on Functions: 제네릭 함수","path":"2/functions#제네릭-함수","type":"More on Functions"},{"name":"More on Functions: 함수 오버로드","path":"2/functions#함수-오버로드","type":"More on Functions"},{"name":"More on Functions: 함수 타입 표현식","path":"2/functions#함수-타입-표현식","type":"More on Functions"},{"name":"More on Functions: 함수의 할당가능성","path":"2/functions#함수의-할당가능성","type":"More on Functions"},{"name":"More on Functions: 호출 시그니처","path":"2/functions#호출-시그니처","type":"More on Functions"},{"name":"Namespaces","path":"namespaces","type":"Namespaces"},{"name":"Namespaces and Modules","path":"namespaces-and-modules","type":"Namespaces and Modules"},{"name":"Namespaces and Modules: /// <reference>를 사용한 모듈","path":"namespaces-and-modules#-reference를-사용한-모듈","type":"Namespaces and Modules"},{"name":"Namespaces and Modules: 모듈의 트레이드-오프 (Trade-offs of Modules)","path":"namespaces-and-modules#모듈의-트레이드-오프-trade-offs-of-modules","type":"Namespaces and Modules"},{"name":"Namespaces and Modules: 불필요한 네임스페이스 (Needless Namespacing)","path":"namespaces-and-modules#불필요한-네임스페이스-needless-namespacing","type":"Namespaces and Modules"},{"name":"Namespaces: Ambient 네임스페이스 (Ambient Namespaces)","path":"namespaces#ambient-네임스페이스-ambient-namespaces","type":"Namespaces"},{"name":"Namespaces: 네임스페이스화된 검사기 (Namespaced Validators)","path":"namespaces#네임스페이스화된-검사기-namespaced-validators","type":"Namespaces"},{"name":"Namespaces: 다중 파일 네임스페이스 (Multi-file namespaces)","path":"namespaces#다중-파일-네임스페이스-multi-file-namespaces","type":"Namespaces"},{"name":"Namespaces: 단일 파일 검사기 (Validators in a single file)","path":"namespaces#단일-파일-검사기-validators-in-a-single-file","type":"Namespaces"},{"name":"Nightly Builds","path":"nightly-builds","type":"Nightly Builds"},{"name":"Nightly Builds: nightly 빌드를 사용하도록 IDE 업데이트 (Updating your IDE to use the nightly builds)","path":"nightly-builds#nightly-빌드를-사용하도록-ide-업데이트-updating-your-ide-to-use-the-nightly-builds","type":"Nightly Builds"},{"name":"Nightly Builds: npm 사용하기 (Using npm)","path":"nightly-builds#npm-사용하기-using-npm","type":"Nightly Builds"},{"name":"Project References","path":"project-references","type":"Project References"},{"name":"Project References: outFiles 구조화하기 (Structuring for outFiles)","path":"project-references#outfiles-구조화하기-structuring-for-outfiles","type":"Project References"},{"name":"Project References: tsc -b 명령줄 (tsc -b Commandline)","path":"project-references#tsc--b-명령줄-tsc--b-commandline","type":"Project References"},{"name":"Project References: 상대 모듈 구조화하기 (Structuring for relative modules)","path":"project-references#상대-모듈-구조화하기-structuring-for-relative-modules","type":"Project References"},{"name":"Project References: 전체 구조 (Overall Structure)","path":"project-references#전체-구조-overall-structure","type":"Project References"},{"name":"Publishing","path":"declaration-files/publishing","type":"Publishing"},{"name":"Publishing: Matching behavior","path":"declaration-files/publishing#matching-behavior","type":"Publishing"},{"name":"Publishing: Multiple fields","path":"declaration-files/publishing#multiple-fields","type":"Publishing"},{"name":"Publishing: Version selection with typesVersions","path":"declaration-files/publishing#version-selection-with-typesversions","type":"Publishing"},{"name":"Publishing: 경고 플래그 (Red flags)","path":"declaration-files/publishing#경고-플래그-red-flags","type":"Publishing"},{"name":"Publishing: 의존성 (Dependencies)","path":"declaration-files/publishing#의존성-dependencies","type":"Publishing"},{"name":"Symbols","path":"symbols","type":"Symbols"},{"name":"Symbols: Symbol.hasInstance","path":"symbols#symbolhasinstance","type":"Symbols"},{"name":"Symbols: Symbol.isConcatSpreadable","path":"symbols#symbolisconcatspreadable","type":"Symbols"},{"name":"Symbols: Symbol.iterator","path":"symbols#symboliterator","type":"Symbols"},{"name":"Symbols: Symbol.match","path":"symbols#symbolmatch","type":"Symbols"},{"name":"Symbols: Symbol.replace","path":"symbols#symbolreplace","type":"Symbols"},{"name":"Symbols: Symbol.search","path":"symbols#symbolsearch","type":"Symbols"},{"name":"Symbols: Symbol.species","path":"symbols#symbolspecies","type":"Symbols"},{"name":"Symbols: Symbol.split","path":"symbols#symbolsplit","type":"Symbols"},{"name":"Symbols: Symbol.toPrimitive","path":"symbols#symboltoprimitive","type":"Symbols"},{"name":"Symbols: Symbol.toStringTag","path":"symbols#symboltostringtag","type":"Symbols"},{"name":"Symbols: Symbol.unscopables","path":"symbols#symbolunscopables","type":"Symbols"},{"name":"Symbols: 잘 알려진 심벌 (Well-known Symbols)","path":"symbols#잘-알려진-심벌-well-known-symbols","type":"Symbols"},{"name":"The Basics","path":"2/basic-types","type":"The Basics"},{"name":"The Basics: tsc, TypeScript 컴파일러","path":"2/basic-types#tsc-typescript-컴파일러","type":"The Basics"},{"name":"The Basics: 다운레벨링","path":"2/basic-types#다운레벨링","type":"The Basics"},{"name":"The Basics: 명시적 타입","path":"2/basic-types#명시적-타입","type":"The Basics"},{"name":"The Basics: 엄격도","path":"2/basic-types#엄격도","type":"The Basics"},{"name":"The Basics: 예외가 아닌 실행 실패","path":"2/basic-types#예외가-아닌-실행-실패","type":"The Basics"},{"name":"The Basics: 정적 타입 검사","path":"2/basic-types#정적-타입-검사","type":"The Basics"},{"name":"The Basics: 지워진 타입","path":"2/basic-types#지워진-타입","type":"The Basics"},{"name":"The Basics: 프로그래밍 도구로서의 타입","path":"2/basic-types#프로그래밍-도구로서의-타입","type":"The Basics"},{"name":"The TypeScript Handbook","path":"intro","type":"The TypeScript Handbook"},{"name":"The TypeScript Handbook: 시작하기 (Get Started)","path":"intro#시작하기-get-started","type":"The TypeScript Handbook"},{"name":"The TypeScript Handbook: 핸드북에 대해서 (About this Handbook)","path":"intro#핸드북에-대해서-about-this-handbook","type":"The TypeScript Handbook"},{"name":"The TypeScript Handbook: 핸드북은 어떻게 구성되어 있는가? (How is this Handbook Structured)","path":"intro#핸드북은-어떻게-구성되어-있는가-how-is-this-handbook-structured","type":"The TypeScript Handbook"},{"name":"Triple-Slash Directives","path":"triple-slash-directives","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <amd-dependency />","path":"triple-slash-directives#-amd-dependency-","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <amd-module />","path":"triple-slash-directives#-amd-module-","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <reference lib=\"...\" />","path":"triple-slash-directives#-reference-lib-","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <reference no-default-lib=\"true\"/>","path":"triple-slash-directives#-reference-no-default-libtrue","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <reference path=\"...\" />","path":"triple-slash-directives#-reference-path-","type":"Triple-Slash Directives"},{"name":"Triple-Slash Directives: /// <reference types=\"...\" />","path":"triple-slash-directives#-reference-types-","type":"Triple-Slash Directives"},{"name":"tsc CLI Options","path":"compiler-options","type":"tsc CLI Options"},{"name":"tsc CLI Options: CLI로 사용하기 (Using the CLI)","path":"compiler-options#cli로-사용하기-using-the-cli","type":"tsc CLI Options"},{"name":"tsc CLI Options: 관련사항 (Related)","path":"compiler-options#관련사항-related","type":"tsc CLI Options"},{"name":"tsc CLI Options: 컴파일러 옵션 (Compiler Options)","path":"compiler-options#컴파일러-옵션-compiler-options","type":"tsc CLI Options"},{"name":"TSConfig Reference","path":"tsconfig","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Backwards Compatibility","path":"tsconfig#Backwards_Compatibility_6253","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Command Line","path":"tsconfig#Command_line_Options_6171","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Compiler Diagnostics","path":"tsconfig#Compiler_Diagnostics_6251","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Completeness","path":"tsconfig#Completeness_6257","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Editor Support","path":"tsconfig#Editor_Support_6249","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Emit","path":"tsconfig#Emit_6246","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Interop Constraints","path":"tsconfig#Interop_Constraints_6252","type":"TSConfig Reference"},{"name":"TSConfig Reference: #JavaScript Support","path":"tsconfig#JavaScript_Support_6247","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Language and Environment","path":"tsconfig#Language_and_Environment_6254","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Modules","path":"tsconfig#Modules_6244","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Output Formatting","path":"tsconfig#Output_Formatting_6256","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Projects","path":"tsconfig#Projects_6255","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Type Checking","path":"tsconfig#Type_Checking_6248","type":"TSConfig Reference"},{"name":"TSConfig Reference: #Watch Options","path":"tsconfig#Watch_and_Build_Modes_6250","type":"TSConfig Reference"},{"name":"TSConfig Reference: Type Acquisition","path":"tsconfig#type-acquisition","type":"TSConfig Reference"},{"name":"TSConfig Reference: Watch Options","path":"tsconfig#watch-options","type":"TSConfig Reference"},{"name":"Type Checking JavaScript Files","path":"type-checking-javascript-files","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: arguments 사용으로부터 추론된 var-args 매개변수 선언 (Var-args parameter declaration inferred from use of arguments)","path":"type-checking-javascript-files#arguments-사용으로부터-추론된-var-args-매개변수-선언-var-args-parameter-declaration-inferred-from-use-of-arguments","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: CommonJS 모듈 지원 (CommonJS modules are supported)","path":"type-checking-javascript-files#commonjs-모듈-지원-commonjs-modules-are-supported","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: null, undefined 및 빈 배열 이니셜라이저는 any 혹은 any[] 타입 (null, undefined, and empty array initializers are of type any or any[])","path":"type-checking-javascript-files#null-undefined-및-빈-배열-이니셜라이저는-any-혹은-any-타입-null-undefined-and-empty-array-initializers-are-of-type-any-or-any","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 객체 리터럴은 확장 가능 (Object literals are open-ended)","path":"type-checking-javascript-files#객체-리터럴은-확장-가능-object-literals-are-open-ended","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 생성자 함수와 클래스는 동일 (Constructor functions are equivalent to classes)","path":"type-checking-javascript-files#생성자-함수와-클래스는-동일-constructor-functions-are-equivalent-to-classes","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 클래스 본문의 할당에서 추론된 프로퍼티 (Properties are inferred from assignments in class bodies)","path":"type-checking-javascript-files#클래스-본문의-할당에서-추론된-프로퍼티-properties-are-inferred-from-assignments-in-class-bodies","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 클래스, 함수, 객체 리터럴은 네임스페이스 (Classes, functions, and object literals are namespaces)","path":"type-checking-javascript-files#클래스-함수-객체-리터럴은-네임스페이스-classes-functions-and-object-literals-are-namespaces","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 타입이 지정되지 않은 매개변수는 기본적으로 any임 (Unspecified type parameters default to any)","path":"type-checking-javascript-files#타입이-지정되지-않은-매개변수는-기본적으로-any임-unspecified-type-parameters-default-to-any","type":"Type Checking JavaScript Files"},{"name":"Type Checking JavaScript Files: 함수 매개변수는 기본적으로 선택 사항 (Function parameters are optional by default)","path":"type-checking-javascript-files#함수-매개변수는-기본적으로-선택-사항-function-parameters-are-optional-by-default","type":"Type Checking JavaScript Files"},{"name":"Type Compatibility","path":"type-compatibility","type":"Type Compatibility"},{"name":"Type Compatibility: Any, unknown, object, void, undefined, null, never 할당 호환성","path":"type-compatibility#any-unknown-object-void-undefined-null-never-할당-호환성","type":"Type Compatibility"},{"name":"Type Compatibility: 건전성에 대한 참고사항 (A Note on Soundness)","path":"type-compatibility#건전성에-대한-참고사항-a-note-on-soundness","type":"Type Compatibility"},{"name":"Type Compatibility: 선택적 매개변수와 나머지 매개변수 (Optional Parameters and Rest Parameters)","path":"type-compatibility#선택적-매개변수와-나머지-매개변수-optional-parameters-and-rest-parameters","type":"Type Compatibility"},{"name":"Type Compatibility: 오버로드 함수 (Functions with overloads)","path":"type-compatibility#오버로드-함수-functions-with-overloads","type":"Type Compatibility"},{"name":"Type Compatibility: 클래스의 private 멤버와 protected 멤버 (Private and protected members in classes)","path":"type-compatibility#클래스의-private-멤버와-protected-멤버-private-and-protected-members-in-classes","type":"Type Compatibility"},{"name":"Type Compatibility: 하위 타입 vs 할당 (Subtype vs Assignment)","path":"type-compatibility#하위-타입-vs-할당-subtype-vs-assignment","type":"Type Compatibility"},{"name":"Type Compatibility: 함수 매개변수의 Bivariance (Function Parameter Bivariance)","path":"type-compatibility#함수-매개변수의-bivariance-function-parameter-bivariance","type":"Type Compatibility"},{"name":"Type Inference","path":"type-inference","type":"Type Inference"},{"name":"Type Inference: 문맥상 타이핑","path":"type-inference#문맥상-타이핑","type":"Type Inference"},{"name":"Type Inference: 최적 공통 타입","path":"type-inference#최적-공통-타입","type":"Type Inference"},{"name":"Typeof Type Operator","path":"2/typeof-types","type":"Typeof Type Operator"},{"name":"Typeof Type Operator: typeof 타입 연산자","path":"2/typeof-types#typeof-타입-연산자","type":"Typeof Type Operator"},{"name":"TypeScript for Functional Programmers","path":"typescript-in-5-minutes-func","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: readonly 와 const (readonly and const)","path":"typescript-in-5-minutes-func#readonly-와-const-readonly-and-const","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 구조적인 타이핑 (Structural typing)","path":"typescript-in-5-minutes-func#구조적인-타이핑-structural-typing","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 내장 타입 (Built-in types)","path":"typescript-in-5-minutes-func#내장-타입-built-in-types","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 다음 단계 (Next Steps)","path":"typescript-in-5-minutes-func#다음-단계-next-steps","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 모듈 시스템 (Module system)","path":"typescript-in-5-minutes-func#모듈-시스템-module-system","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 문맥적인 타이핑 (Contextual typing)","path":"typescript-in-5-minutes-func#문맥적인-타이핑-contextual-typing","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 유니언 (Unions)","path":"typescript-in-5-minutes-func#유니언-unions","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 유닛 타입 (Unit types)","path":"typescript-in-5-minutes-func#유닛-타입-unit-types","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 점진적인 타이핑 (Gradual typing)","path":"typescript-in-5-minutes-func#점진적인-타이핑-gradual-typing","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 타입 매개변수 (Type Parameters)","path":"typescript-in-5-minutes-func#타입-매개변수-type-parameters","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 타입 별칭 (Type aliases)","path":"typescript-in-5-minutes-func#타입-별칭-type-aliases","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Functional Programmers: 판별 유니언 (Discriminated Unions)","path":"typescript-in-5-minutes-func#판별-유니언-discriminated-unions","type":"TypeScript for Functional Programmers"},{"name":"TypeScript for Java/C# Programmers","path":"typescript-in-5-minutes-oop","type":"TypeScript for Java/C# Programmers"},{"name":"TypeScript for Java/C# Programmers: JavaScript 함께 배우기 (Co-learning JavaScript)","path":"typescript-in-5-minutes-oop#javascript-함께-배우기-co-learning-javascript","type":"TypeScript for Java/C# Programmers"},{"name":"TypeScript for Java/C# Programmers: TypeScript의 OOP (OOP in TypeScript)","path":"typescript-in-5-minutes-oop#typescript의-oop-oop-in-typescript","type":"TypeScript for Java/C# Programmers"},{"name":"TypeScript for Java/C# Programmers: 클래스 다시 생각하기 (Rethinking the Class)","path":"typescript-in-5-minutes-oop#클래스-다시-생각하기-rethinking-the-class","type":"TypeScript for Java/C# Programmers"},{"name":"TypeScript for Java/C# Programmers: 타입 다시 생각하기 (Rethinking Types)","path":"typescript-in-5-minutes-oop#타입-다시-생각하기-rethinking-types","type":"TypeScript for Java/C# Programmers"},{"name":"TypeScript for JavaScript Programmers","path":"typescript-in-5-minutes","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for JavaScript Programmers: 구조적 타입 시스템 (Structural Type System)","path":"typescript-in-5-minutes#구조적-타입-시스템-structural-type-system","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for JavaScript Programmers: 다음 단계 (Next Steps)","path":"typescript-in-5-minutes#다음-단계-next-steps","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for JavaScript Programmers: 타입 구성 (Composing Types)","path":"typescript-in-5-minutes#타입-구성-composing-types","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for JavaScript Programmers: 타입 정의하기 (Defining Types)","path":"typescript-in-5-minutes#타입-정의하기-defining-types","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for JavaScript Programmers: 타입 추론 (Types by Inference)","path":"typescript-in-5-minutes#타입-추론-types-by-inference","type":"TypeScript for JavaScript Programmers"},{"name":"TypeScript for the New Programmer","path":"typescript-from-scratch","type":"TypeScript for the New Programmer"},{"name":"TypeScript for the New Programmer: JavaScript와 TypeScript 학습 (Learning JavaScript and TypeScript)","path":"typescript-from-scratch#javascript와-typescript-학습-learning-javascript-and-typescript","type":"TypeScript for the New Programmer"},{"name":"TypeScript for the New Programmer: JavaScript의 짧은 역사 (What is JavaScript? A Brief History)","path":"typescript-from-scratch#javascript의-짧은-역사-what-is-javascript-a-brief-history","type":"TypeScript for the New Programmer"},{"name":"TypeScript for the New Programmer: TypeScript: 정적 타입 검사자 (TypeScript: A Static Type Checker)","path":"typescript-from-scratch#typescript-정적-타입-검사자-typescript-a-static-type-checker","type":"TypeScript for the New Programmer"},{"name":"TypeScript Tooling in 5 minutes","path":"typescript-tooling-in-5-minutes","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: TypeScript 설치하기","path":"typescript-tooling-in-5-minutes#typescript-설치하기","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: TypeScript 웹 앱 실행해보기","path":"typescript-tooling-in-5-minutes#typescript-웹-앱-실행해보기","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: 인터페이스","path":"typescript-tooling-in-5-minutes#인터페이스","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: 첫 번째 TypeScript 파일 생성하기","path":"typescript-tooling-in-5-minutes#첫-번째-typescript-파일-생성하기","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: 코드 컴파일하기","path":"typescript-tooling-in-5-minutes#코드-컴파일하기","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: 클래스","path":"typescript-tooling-in-5-minutes#클래스","type":"TypeScript Tooling in 5 minutes"},{"name":"TypeScript Tooling in 5 minutes: 타입 표기","path":"typescript-tooling-in-5-minutes#타입-표기","type":"TypeScript Tooling in 5 minutes"},{"name":"Using Babel with TypeScript","path":"babel-with-typescript","type":"Using Babel with TypeScript"},{"name":"Using Babel with TypeScript: Babel vs TypeScript의 tsc","path":"babel-with-typescript#babel-vs-typescript의-tsc","type":"Using Babel with TypeScript"},{"name":"Using Babel with TypeScript: 트랜스파일링은 Babel, 타입은 tsc","path":"babel-with-typescript#트랜스파일링은-babel-타입은-tsc","type":"Using Babel with TypeScript"},{"name":"Utility Types","path":"utility-types","type":"Utility Types"},{"name":"Utility Types: ConstructorParameters<Type>","path":"utility-types#constructorparameterstype","type":"Utility Types"},{"name":"Utility Types: Exclude<Type, ExcludedUnion>","path":"utility-types#excludetype-excludedunion","type":"Utility Types"},{"name":"Utility Types: Extract<Type, Union>","path":"utility-types#extracttype-union","type":"Utility Types"},{"name":"Utility Types: InstanceType<Type>","path":"utility-types#instancetypetype","type":"Utility Types"},{"name":"Utility Types: NonNullable<Type>","path":"utility-types#nonnullabletype","type":"Utility Types"},{"name":"Utility Types: Omit<Type, Keys>","path":"utility-types#omittype-keys","type":"Utility Types"},{"name":"Utility Types: OmitThisParameter<Type>","path":"utility-types#omitthisparametertype","type":"Utility Types"},{"name":"Utility Types: Parameters<Type>","path":"utility-types#parameterstype","type":"Utility Types"},{"name":"Utility Types: Partial<Type>","path":"utility-types#partialtype","type":"Utility Types"},{"name":"Utility Types: Pick<Type, Keys>","path":"utility-types#picktype-keys","type":"Utility Types"},{"name":"Utility Types: Readonly<Type>","path":"utility-types#readonlytype","type":"Utility Types"},{"name":"Utility Types: Record<Keys,Type>","path":"utility-types#recordkeystype","type":"Utility Types"},{"name":"Utility Types: Required<Type>","path":"utility-types#requiredtype","type":"Utility Types"},{"name":"Utility Types: ReturnType<Type>","path":"utility-types#returntypetype","type":"Utility Types"},{"name":"Utility Types: ThisParameterType<Type>","path":"utility-types#thisparametertypetype","type":"Utility Types"},{"name":"Utility Types: ThisType<Type>","path":"utility-types#thistypetype","type":"Utility Types"},{"name":"Utility Types: 내장 문자열 조작 타입","path":"utility-types#내장-문자열-조작-타입","type":"Utility Types"},{"name":"Variable Declaration","path":"variable-declarations","type":"Variable Declaration"},{"name":"Variable Declaration: 객체 구조 분해 (Object destructuring)","path":"variable-declarations#객체-구조-분해-object-destructuring","type":"Variable Declaration"},{"name":"Variable Declaration: 배열 구조 분해 (Array destructuring)","path":"variable-declarations#배열-구조-분해-array-destructuring","type":"Variable Declaration"},{"name":"Variable Declaration: 변수 캡쳐링의 단점 (Variable capturing quirks)","path":"variable-declarations#변수-캡쳐링의-단점-variable-capturing-quirks","type":"Variable Declaration"},{"name":"Variable Declaration: 블록 스코프 (Block-scoping)","path":"variable-declarations#블록-스코프-block-scoping","type":"Variable Declaration"},{"name":"Variable Declaration: 블록 스코프 변수 캡쳐링 (Block-scoped variable capturing)","path":"variable-declarations#블록-스코프-변수-캡쳐링-block-scoped-variable-capturing","type":"Variable Declaration"},{"name":"Variable Declaration: 스코프 규칙 (Scoping rules)","path":"variable-declarations#스코프-규칙-scoping-rules","type":"Variable Declaration"},{"name":"Variable Declaration: 재선언과 쉐도잉 (Re-declarations and Shadowing)","path":"variable-declarations#재선언과-쉐도잉-re-declarations-and-shadowing","type":"Variable Declaration"},{"name":"Variable Declaration: 전개 (Spread)","path":"variable-declarations#전개-spread","type":"Variable Declaration"},{"name":"Variable Declaration: 튜플 구조 분해 (Tuple destructuring)","path":"variable-declarations#튜플-구조-분해-tuple-destructuring","type":"Variable Declaration"},{"name":"Variable Declaration: 함수 선언 (Function declarations)","path":"variable-declarations#함수-선언-function-declarations","type":"Variable Declaration"},{"name":"What is a tsconfig.json","path":"tsconfig-json","type":"What is a tsconfig.json"}],"types":[{"name":"ASP.NET Core","count":2,"slug":"asp-net-core"},{"name":"Compiler Options in MSBuild","count":8,"slug":"compiler-options-in-msbuild"},{"name":"Conditional Types","count":2,"slug":"conditional-types"},{"name":"Configuring Watch","count":5,"slug":"configuring-watch"},{"name":"Consumption","count":4,"slug":"consumption"},{"name":"Creating .d.ts Files from .js files","count":5,"slug":"creating-d-ts-files-from-js-files"},{"name":"Declaration Merging","count":10,"slug":"declaration-merging"},{"name":"Declaration Reference","count":9,"slug":"declaration-reference"},{"name":"Decorators","count":11,"slug":"decorators"},{"name":"Deep Dive","count":6,"slug":"deep-dive"},{"name":"Do's and Don'ts","count":9,"slug":"do-s-and-don-ts"},{"name":"DOM Manipulation","count":7,"slug":"dom-manipulation"},{"name":"Enums","count":10,"slug":"enums"},{"name":"Everyday Types","count":15,"slug":"everyday-types"},{"name":"Generics","count":3,"slug":"generics"},{"name":"Gulp","count":10,"slug":"gulp"},{"name":"Indexed Access Types","count":1,"slug":"indexed-access-types"},{"name":"Integrating with Build Tools","count":1,"slug":"integrating-with-build-tools"},{"name":"Introduction","count":8,"slug":"introduction"},{"name":"Iterators and Generators","count":3,"slug":"iterators-and-generators"},{"name":"JS Projects Utilizing TypeScript","count":4,"slug":"js-projects-utilizing-typescript"},{"name":"JSDoc Reference","count":13,"slug":"jsdoc-reference"},{"name":"JSX","count":11,"slug":"jsx"},{"name":"Keyof Type Operator","count":2,"slug":"keyof-type-operator"},{"name":"Library Structures","count":12,"slug":"library-structures"},{"name":"Mapped Types","count":2,"slug":"mapped-types"},{"name":"Migrating from JavaScript","count":6,"slug":"migrating-from-javascript"},{"name":"Module Resolution","count":7,"slug":"module-resolution"},{"name":"Module: Class","count":1,"slug":"module-class"},{"name":"Module: Function","count":1,"slug":"module-function"},{"name":"Modules","count":14,"slug":"modules"},{"name":"More on Functions","count":11,"slug":"more-on-functions"},{"name":"Namespaces","count":5,"slug":"namespaces"},{"name":"Namespaces and Modules","count":4,"slug":"namespaces-and-modules"},{"name":"Nightly Builds","count":3,"slug":"nightly-builds"},{"name":"Project References","count":5,"slug":"project-references"},{"name":"Publishing","count":6,"slug":"publishing"},{"name":"Symbols","count":13,"slug":"symbols"},{"name":"The Basics","count":9,"slug":"the-basics"},{"name":"The TypeScript Handbook","count":4,"slug":"the-typescript-handbook"},{"name":"Triple-Slash Directives","count":7,"slug":"triple-slash-directives"},{"name":"tsc CLI Options","count":4,"slug":"tsc-cli-options"},{"name":"TSConfig Reference","count":17,"slug":"tsconfig-reference"},{"name":"Type Checking JavaScript Files","count":10,"slug":"type-checking-javascript-files"},{"name":"Type Compatibility","count":8,"slug":"type-compatibility"},{"name":"Type Inference","count":3,"slug":"type-inference"},{"name":"Typeof Type Operator","count":2,"slug":"typeof-type-operator"},{"name":"TypeScript for Functional Programmers","count":13,"slug":"typescript-for-functional-programmers"},{"name":"TypeScript for Java/C# Programmers","count":5,"slug":"typescript-for-java-c-programmers"},{"name":"TypeScript for JavaScript Programmers","count":6,"slug":"typescript-for-javascript-programmers"},{"name":"TypeScript for the New Programmer","count":4,"slug":"typescript-for-the-new-programmer"},{"name":"TypeScript Tooling in 5 minutes","count":8,"slug":"typescript-tooling-in-5-minutes"},{"name":"Using Babel with TypeScript","count":3,"slug":"using-babel-with-typescript"},{"name":"Utility Types","count":18,"slug":"utility-types"},{"name":"Variable Declaration","count":11,"slug":"variable-declaration"},{"name":"What is a tsconfig.json","count":1,"slug":"what-is-a-tsconfig-json"}]}